{"version":3,"sources":["components/TopBar.js","components/Form.js","components/ListElemDate.js","components/ListElem.js","components/ListOfElements.js","App.js","reportWebVitals.js","index.js"],"names":["Wrapper","styled","div","Button","button","Info","TopBar","props","onClick","onDeleteAllListElements","className","form","InputArea","Input","input","Xbutton","Label","label","MainButton","BotButtons","Form","useState","inputNameValue","setInputNameValue","inputSurnameValue","setInputSurnameValue","inputContentValue","setInputContentValue","inputDateValue","setInputDateValue","isClicked","setIsClicked","type","onSubmit","event","preventDefault","trim","formListElement","name","surrname","content","date","Date","onClickAdd","value","onChange","target","clickAdd","ListElemDate","month","toLocaleString","day","year","getFullYear","LiWrapper","li","Section","Personal","h4","ContentSection","ButtonMore","ButtonClose","ListElem","onDeleteTask","id","UlWrapper","ul","ListOfElements","listElements","map","element","onDeleteListElem","Header","h1","App","exampleListElements","formListElements","setFormListElements","elementId","previous","filter","formInput","newObject","Math","random","toString","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1067a2e5.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 1rem;\n  align-self: flex-end;\n`;\nconst Button = styled.button`\n  border: none;\n  border-radius: 8px;\n  background-color: #000000;\n  color: white;\n  padding: 0.6rem;\n  margin-right: 1rem;\n  cursor: pointer;\n`;\nconst Info = styled.button`\n  border: none;\n  background: none;\n  font-size: 2rem;\n  cursor: pointer;\n`;\n\nconst TopBar = (props) => {\n  const deleteAllHandler = () => {\n    props.onDeleteAllListElements();\n  };\n  return (\n    <Wrapper>\n      <Button onClick={deleteAllHandler}>Clear All</Button>\n      <Info>\n        <i className=\"fas fa-info-circle\"></i>\n      </Info>\n    </Wrapper>\n  );\n};\n\nexport default TopBar;\n","import React, { useState } from \"react\";\n\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 60%;\n  padding: 1rem;\n  border-radius: 0.5rem;\n  background-color: #00d9ff47;\n  box-shadow: 0 1px 8px rgba(0, 0, 0, 0.25);\n`;\nconst InputArea = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`;\nconst Input = styled.input`\n  width: 80%;\n  height: 1.5rem;\n  background-color: #a0420311;\n  border: 1px solid #e75c0030;\n  border-radius: 0.3rem;\n  margin: 0 0 0.6rem 1.5rem;\n`;\nconst Xbutton = styled.button`\n  border: none;\n  background: none;\n  color: #0000ff92;\n  cursor: pointer;\n  transition: color 0.5s, font-size 0.5s;\n  &:hover {\n    color: red;\n    font-size: 1.5rem;\n  }\n`;\nconst Label = styled.label`\n  font-size: 0.8rem;\n  color: #0000ff94;\n  margin-bottom: 0.3rem;\n`;\nconst Button = styled.button`\n  background-color: #0000ff76;\n  color: white;\n  width: 5rem;\n  padding: 0.4rem;\n  border: none;\n  border-radius: 0.5rem;\n  cursor: pointer;\n  transition: background-color 0.5s;\n  margin-top: 0.3rem;\n  margin-left: 5px;\n\n  &:hover {\n    background-color: #0000ffa4;\n  }\n`;\nconst MainButton = styled(Button) `\n  width: 80%;\n`;\n\nconst BotButtons = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  align-self: flex-end;\n`;\n\nconst Form = (props) => {\n  const [inputNameValue, setInputNameValue] = useState(\"\");\n  const [inputSurnameValue, setInputSurnameValue] = useState(\"\");\n  const [inputContentValue, setInputContentValue] = useState(\"\");\n  const [inputDateValue, setInputDateValue] = useState(\"\");\n\n  const [isClicked, setIsClicked] = useState(false);\n\n  const readNameHandler = (event) => {\n    setInputNameValue(event.target.value);\n  };\n  const readSurnameHandler = (event) => {\n    setInputSurnameValue(event.target.value);\n  };\n  const readContentHandler = (event) => {\n    setInputContentValue(event.target.value);\n  };\n  const readDateHandler = (event) => {\n    setInputDateValue(event.target.value);\n  };\n  const clearNameInput = () => {\n    setInputNameValue(\"\");\n  };\n  const clearSurnameInput = () => {\n    setInputSurnameValue(\"\");\n  };\n  const clearContentInput = () => {\n    setInputContentValue(\"\");\n  };\n  const addItemHandler = (event) => {\n    event.preventDefault();\n    if (\n      inputNameValue.trim() !== \"\" &&\n      inputSurnameValue.trim() !== \"\" &&\n      inputContentValue.trim() !== \"\" &&\n      inputDateValue.trim() !== \"\"\n    ) {\n      const formListElement = {\n        name: inputNameValue,\n        surrname: inputSurnameValue,\n        content: inputContentValue,\n        date: new Date(inputDateValue),\n      };\n      setIsClicked(false);\n      props.onClickAdd(formListElement);\n    }\n    setInputNameValue(\"\");\n    setInputSurnameValue(\"\");\n    setInputContentValue(\"\");\n  };\n\n  const showForm = () => {\n    setIsClicked(true);\n  };\n  const hideForm = () => {\n    setIsClicked(false)\n  }\n\n  if (isClicked === false) {\n    return (\n      <Wrapper>\n        <MainButton type=\"button\" onClick={showForm}>\n          Add new task\n        </MainButton>\n      </Wrapper>\n    );\n  }\n\n  return (\n    <Wrapper onSubmit={addItemHandler}>\n      <Label>Name: </Label>\n      <InputArea>\n        <Input\n          type=\"text\"\n          value={inputNameValue}\n          onChange={readNameHandler}\n        />\n        <Xbutton type=\"button\" onClick={clearNameInput}>\n          <i className=\"fas fa-times\"></i>\n        </Xbutton>\n      </InputArea>\n      <Label>Surname: </Label>\n      <InputArea>\n        <Input\n          type=\"text\"\n          value={inputSurnameValue}\n          onChange={readSurnameHandler}\n        />\n        <Xbutton type=\"button\" onClick={clearSurnameInput}>\n          <i className=\"fas fa-times\"></i>\n        </Xbutton>\n      </InputArea>\n      <Label>Content: </Label>\n      <InputArea>\n        <Input\n          type=\"text\"\n          value={inputContentValue}\n          onChange={readContentHandler}\n        />\n        <Xbutton type=\"button\" onClick={clearContentInput}>\n          <i className=\"fas fa-times\"></i>\n        </Xbutton>\n      </InputArea>\n      <Label>Date: </Label>\n      <InputArea>\n        <Input type=\"date\" onChange={readDateHandler} />\n      </InputArea>\n      <BotButtons>\n        <Button onClick={props.clickAdd}>Add</Button>\n        <Button onClick={hideForm}>Collapse</Button>\n      </BotButtons>\n    </Wrapper>\n  );\n};\n\nexport default Form;\n\n// czy moge jakos w jednej funkcji czyscic ten przycisk ktory chce\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Date = styled.div`\n  padding: 0.38rem;\n`;\n\nconst ListElemDate = (props) => {\n  const month = props.date.toLocaleString(\"pl-PL\", { month: \"long\" });\n  const day = props.date.toLocaleString(\"pl-PL\", { day: \"2-digit\" });\n  const year = props.date.getFullYear();\n  return (\n    <Date>\n      <div>{day}</div>\n      <div>{month}</div>\n      <div>{year}</div>\n    </Date>\n  );\n};\n\nexport default ListElemDate;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport ListElemDate from \"./ListElemDate\";\n\nconst LiWrapper = styled.li`\n  list-style: none;\n  width: 80%;\n  padding: 0.5rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-radius: 0.5rem;\n  margin-bottom: 0.5rem;\n  background-color: #00eeff58;\n  box-shadow: 0 1px 8px rgba(0, 0, 0, 0.2);\n`;\nconst Section = styled.div`\n  border: 1px solid #0000ff13;\n  border-radius: 0.5rem;\n  background-color: #0000ff13;\n  width: 30%;\n`;\nconst Personal = styled.h4`\n  margin: 0.2rem;\n  padding: 0.3rem;\n`;\nconst ContentSection = styled(Section)`\n  width: 80%;\n  margin: 0.2rem 0.5rem;\n  padding: 0.45rem;\n`;\nconst ButtonMore = styled.button`\n  border: none;\n  background: none;\n  cursor: pointer;\n  font-size: 0.7rem;\n  color: green;\n`;\nconst ButtonClose = styled(ButtonMore)`\n  color: #0000ff92;\n  font-size: 0.8rem;\n  transition: color 0.5s;\n  &:hover {\n    color: red;\n  }\n`;\n\nconst ListElem = (props) => {\n  const deleteTaskHandler = () => {\n    props.onDeleteTask(props.id);\n  };\n\n  return (\n    <LiWrapper>\n      <Section>\n        <Personal>{props.name}</Personal>\n        <Personal>{props.surrname}</Personal>\n      </Section>\n      <ContentSection>\n        <p>\n          {props.content}\n          <ButtonMore>\n            More <i className=\"fas fa-angle-double-right\"></i>\n          </ButtonMore>\n        </p>\n      </ContentSection>\n      <Section>\n        <ListElemDate date={props.date} />\n      </Section>\n      <ButtonClose onClick={deleteTaskHandler}>\n        <i className=\"far fa-times-circle\"></i>\n      </ButtonClose>\n    </LiWrapper>\n  );\n};\n\nexport default ListElem;\n","import React from \"react\";\n\nimport styled from \"styled-components\";\n\nimport ListElem from \"./ListElem\";\n\nconst UlWrapper = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 90%;\n  padding: 0.5rem;\n`;\n\nconst ListOfElements = (props) => {\n  return (\n    <UlWrapper>\n      {props.listElements.map((element) => (\n        <ListElem\n          key={element.id}\n          id={element.id}\n          name={element.name}\n          surrname={element.surrname}\n          content={element.content}\n          date={element.date}\n          label={element.label}\n          onDeleteTask={props.onDeleteListElem}\n        />\n      ))}\n    </UlWrapper>\n  );\n};\n\nexport default ListOfElements;\n","import React, { useState } from \"react\";\n\nimport styled from \"styled-components\";\n\nimport \"./App.css\";\nimport TopBar from \"./components/TopBar\";\nimport Form from \"./components/Form\";\nimport ListOfElements from \"./components/ListOfElements\";\n\nconst Wrapper = styled.div`\n  font-family: \"Times New Roman\", Times, serif;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nconst Header = styled.h1`\n  padding: 0.5em;\n`;\n\nfunction App() {\n  const exampleListElements = [\n    // to zniknie na pusta tablice\n    {\n      id: \"1\",\n      name: \"Marcin\",\n      surrname: \"Kowalczyk\",\n      content: \"zrobić pranie\",\n      date: new Date(2021, 4, 17),\n      label: 1,\n    },\n  ];\n  const [formListElements, setFormListElements] = useState(exampleListElements);\n\n  //const [isValid, setIsValid] = useState(false);\n\n  const clickAdd = (formInput) => {\n    const newObject = {\n      ...formInput,\n      id: Math.random().toString(),\n    };\n    setFormListElements((previous) => {\n      return [newObject, ...previous];\n    });\n  };\n\n  const deleteListElem = (elementId) => {\n    setFormListElements((previous) => {\n      const newObject = previous.filter((element) => element.id !== elementId);\n      return newObject;\n    });\n  };\n\n  const deleteAllListElements = () => {\n    setFormListElements(exampleListElements);\n  };\n\n  let content = (\n    <ListOfElements\n      onDeleteListElem={deleteListElem}\n      listElements={formListElements}\n    />\n  );\n\n  // if (formListElements.length === 0) {\n  //   content = <p>No tasks found, please click Add new task</p>;\n  // }\n\n  return (\n    <Wrapper className=\"App\">\n      <TopBar\n        onDeleteAllListElements={deleteAllListElements}\n      />\n      <Header>To Do Manager</Header>\n      <Form onClickAdd={clickAdd} />\n      {content}\n    </Wrapper>\n  );\n}\n\nexport default App;\n\n// Logika przycisk usuwający wszystkie cele\n\n// dodac rozszrzenie notatek\n\n// dodac warunki (style i komunikaty)\n\n// ostylować nagłówek\n// zmienic czcionke\n// dodac animacje\n\n// ogarnac ten warunek z id\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["components/TopBar.js","components/Form.js","components/Filter.js","components/ListElemDate.js","components/Note.js","components/ListElem.js","components/ListOfElements.js","App.js","reportWebVitals.js","index.js"],"names":["Wrapper","styled","div","Button","button","Info","TopBar","props","onClick","onDeleteAllListElements","className","form","InputArea","InputText","input","validLength","isNameEmpty","isSurnameEmpty","isTitleEmpty","TextArea","textarea","isInstructionEmpty","InputDate","isDateEmpty","Xbutton","Label","label","MainButton","BotButtons","Form","useState","inputNameValue","setInputNameValue","inputSurnameValue","setInputSurnameValue","inputTitleValue","setInputTitleValue","inputDateValue","setInputDateValue","inputInstructionValue","setInputInstructionValue","isClicked","setIsClicked","isErrorText","setIsErrorText","setIsNameEmpty","setIsSurnameEmpty","setIsTitleEmpty","setInstructionEmpty","setIsDateEmpty","checkInput","setter","trim","inputSettersArray","clearForm","inputsArray","forEach","element","settersArray","clearErrors","validSetter","type","onSubmit","event","preventDefault","length","formListElement","name","surrname","title","instruction","date","Date","onClickAdd","value","onChange","target","id","cols","rows","style","color","clickAdd","FilterWrapper","Input","Filter","onFilterByName","ListElemDate","month","toLocaleString","day","year","getFullYear","NoteWrapper","Note","onHideNote","LiWrapper","MainWrapper","li","Section","Personal","h6","ContentSection","ButtonMore","ButtonClose","ListElem","onDeleteTask","UlWrapper","ul","ListOfElements","listElements","map","onDeleteListElem","Header","h1","App","exampleListElements","formListElements","setFormListElements","inputFilterValue","setInputFilterValue","filteredArray","filter","toLowerCase","includes","content","elementId","previous","formInput","newObject","Math","random","toString","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f11db728.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 1rem;\n  align-self: flex-end;\n`;\nconst Button = styled.button`\n  border: none;\n  border-radius: 8px;\n  background-color: white;\n  color: black;\n  padding: 0.6rem;\n  margin-right: 1rem;\n  cursor: pointer;\n  box-shadow: 0 1px 8px rgba(0, 0, 0, 0.15);\n  transition: background-color .5s;\n\n  &:hover {\n    background-color: #8b8b8b3e;\n  }\n`;\nconst Info = styled.button`\ncolor: #0000ffac;\n  border: none;\n  background: none;\n  font-size: 1.5rem;\n  cursor: pointer;\n`;\n\nconst TopBar = (props) => {\n  const deleteAllHandler = () => {\n    props.onDeleteAllListElements();\n  };\n  return (\n    <Wrapper>\n      <Button onClick={deleteAllHandler}>Clear All</Button>\n      <Info>\n        <i className=\"fas fa-info-circle\"></i>\n      </Info>\n    </Wrapper>\n  );\n};\n\nexport default TopBar;\n","import React, { useState } from \"react\";\n\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 20rem;\n  padding: 1rem;\n  border-radius: 0.5rem;\n  background-color: #00d9ff47;\n  box-shadow: 0 1px 8px rgba(0, 0, 0, 0.15);\n`;\nconst InputArea = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`;\nconst InputText = styled.input`\n  width: 80%;\n  height: 1.5rem;\n  background-color: ${(props) =>\n    props.validLength ? \"#ffffffa7\" : \"#a0000034\"};\n  border: \n    ${(props) =>\n      (props.validLength && props.isNameEmpty) ||\n      props.isSurnameEmpty ||\n      props.isTitleEmpty\n        ? \"none\"\n        : \"1px solid rgb(255, 0, 0, .7)\"};\n  border-radius: 0.3rem;\n  margin: 0 0 0.6rem 1.5rem;\n`;\nconst TextArea = styled.textarea`\n  font-family: \"Times New Roman\", Times, serif;\n  background-color: #ffffffa7;\n  border: ${props => props.isInstructionEmpty ? \"none\" : \"1px solid rgb(255, 0, 0, .7)\"};\n  border-radius: 5px;\n  margin: 0 0 3% 7%;\n  min-width: 80%;\n  max-width: 80%;\n  height: 4rem;\n`;\nconst InputDate = styled(InputText)`\n  ::-webkit-datetime-edit-text {\n    color: #0000ff94;\n    padding: 0 0.1em;\n  }\n  ::-webkit-calendar-picker-indicator {\n    margin: 3px;\n    font-size: 0.6rem;\n    cursor: pointer;\n  }\n  text-align: center;\n  color: #0000ff94;\n  font-size: 0.7rem;\n  margin-left: 37%;\n  width: 45%;\n  background-color: #a0420311;\n  border: 1px solid\n    ${(props) => (props.isDateEmpty ? \"#e75c0030\" : \"rgb(255, 0, 0, .9)\")};\n`;\nconst Xbutton = styled.button`\n  border: none;\n  background: none;\n  color: #0000ff92;\n  cursor: pointer;\n  transition: color 0.5s, font-size 0.5s;\n  &:hover {\n    color: red;\n    font-size: 1.5rem;\n  }\n`;\nconst Label = styled.label`\n  font-size: 0.8rem;\n  color: ${(props) => (props.validLength ? \"#0000ff94\" : \"rgb(255, 0, 0, .9)\")};\n  margin-bottom: 0.3rem;\n`;\nconst Button = styled.button`\n  background-color: #0000ff76;\n  color: white;\n  width: 5rem;\n  padding: 0.4rem;\n  border: none;\n  border-radius: 0.5rem;\n  cursor: pointer;\n  transition: background-color 0.5s;\n  margin-top: 0.3rem;\n  margin-left: 5px;\n\n  &:hover {\n    background-color: #0000ffa4;\n  }\n`;\nconst MainButton = styled(Button)`\n  width: 80%;\n`;\n\nconst BotButtons = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  align-self: flex-end;\n`;\n\nconst Form = (props) => {\n  const [inputNameValue, setInputNameValue] = useState(\"\");\n  const [inputSurnameValue, setInputSurnameValue] = useState(\"\");\n  const [inputTitleValue, setInputTitleValue] = useState(\"\");\n  const [inputDateValue, setInputDateValue] = useState(\"\");\n  const [inputInstructionValue, setInputInstructionValue] = useState(\"\");\n\n  const [isClicked, setIsClicked] = useState(false);\n  const [isErrorText, setIsErrorText] = useState(false);\n\n  const [isNameEmpty, setIsNameEmpty] = useState(false);\n  const [isSurnameEmpty, setIsSurnameEmpty] = useState(false);\n  const [isTitleEmpty, setIsTitleEmpty] = useState(false);\n  const [isInstructionEmpty, setInstructionEmpty] = useState(false);\n  const [isDateEmpty, setIsDateEmpty] = useState(false);\n\n  const readNameHandler = (event) => {\n    setInputNameValue(event.target.value);\n  };\n  const readSurnameHandler = (event) => {\n    setInputSurnameValue(event.target.value);\n  };\n  const readTitleHandler = (event) => {\n    setInputTitleValue(event.target.value);\n  };\n  const readDateHandler = (event) => {\n    setInputDateValue(event.target.value);\n  };\n  const readInstructionHandler = (event) => {\n    setInputInstructionValue(event.target.value);\n  };\n  const clearNameInputHandler = () => {\n    setInputNameValue(\"\");\n  };\n  const clearSurnameInputHandler = () => {\n    setInputSurnameValue(\"\");\n  };\n  const clearTitleInputHandler = () => {\n    setInputTitleValue(\"\");\n  };\n  const clearInstructionInputHandler = () => {\n    setInputInstructionValue(\"\");\n  };\n\n  const addItemHandler = (event) => {\n    event.preventDefault();\n    if (\n      inputNameValue.length < 9 &&\n      inputSurnameValue.length < 9 &&\n      inputTitleValue.length < 14 &&\n      inputNameValue.trim() !== \"\" &&\n      inputSurnameValue.trim() !== \"\" &&\n      inputTitleValue.trim() !== \"\" &&\n      inputDateValue.trim() !== \"\"\n    ) {\n      const formListElement = {\n        name: inputNameValue,\n        surrname: inputSurnameValue,\n        title: inputTitleValue,\n        instruction: inputInstructionValue,\n        date: new Date(inputDateValue),\n      };\n      setIsErrorText(false);\n      setIsClicked(false);\n      props.onClickAdd(formListElement);\n      clearForm(inputSettersArray);\n    } else {\n      setIsErrorText(true);\n    }\n    checkInput(inputNameValue, setIsNameEmpty);\n    checkInput(inputSurnameValue, setIsSurnameEmpty);\n    checkInput(inputTitleValue, setIsTitleEmpty);\n    checkInput(inputDateValue, setIsDateEmpty);\n    checkInput(inputInstructionValue, setInstructionEmpty);\n  };\n  const checkInput = (input, setter) => {\n    input.trim() === \"\" ? setter(true) : setter(false);\n  };\n  const showForm = () => {\n    setIsClicked(true);\n  };\n  const hideForm = () => {\n    setIsClicked(false);\n    clearErrors(settersArray);\n    clearForm(inputSettersArray);\n  };\n  const inputSettersArray = [\n    setInputNameValue,\n    setInputSurnameValue,\n    setInputTitleValue,\n    setInputDateValue,\n    setInputInstructionValue,\n  ];\n  const clearForm = (inputsArray) => {\n    inputsArray.forEach((element) => {\n      element(\"\");\n    });\n  };\n  const settersArray = [\n    setIsErrorText,\n    setIsNameEmpty,\n    setIsSurnameEmpty,\n    setIsTitleEmpty,\n    setIsDateEmpty,\n    setInstructionEmpty\n  ];\n  const clearErrors = (validSetter) => {\n    validSetter.forEach((element) => {\n      element(false);\n    });\n  };\n\n  if (isClicked === false) {\n    return (\n      <Wrapper>\n        <MainButton type=\"button\" onClick={showForm}>\n          Add new task\n        </MainButton>\n      </Wrapper>\n    );\n  }\n\n  return (\n    <Wrapper onSubmit={addItemHandler}>\n      <Label validLength={inputNameValue.length < 9}>Name: </Label>\n      <InputArea>\n        <InputText\n          isNameEmpty={!isNameEmpty}\n          validLength={inputNameValue.length < 9}\n          type=\"text\"\n          value={inputNameValue}\n          onChange={readNameHandler}\n        />\n        <Xbutton type=\"button\" onClick={clearNameInputHandler}>\n          <i className=\"fas fa-times\"></i>\n        </Xbutton>\n      </InputArea>\n      <Label validLength={inputSurnameValue.length < 9}>Surname: </Label>\n      <InputArea>\n        <InputText\n          isSurnameEmpty={!isSurnameEmpty}\n          validLength={inputSurnameValue.length < 9}\n          type=\"text\"\n          value={inputSurnameValue}\n          onChange={readSurnameHandler}\n        />\n        <Xbutton type=\"button\" onClick={clearSurnameInputHandler}>\n          <i className=\"fas fa-times\"></i>\n        </Xbutton>\n      </InputArea>\n      <Label validLength={inputTitleValue.length < 14}>Task title: </Label>\n      <InputArea>\n        <InputText\n          isTitleEmpty={!isTitleEmpty}\n          validLength={inputTitleValue.length < 14}\n          type=\"text\"\n          value={inputTitleValue}\n          onChange={readTitleHandler}\n        />\n        <Xbutton type=\"button\" onClick={clearTitleInputHandler}>\n          <i className=\"fas fa-times\"></i>\n        </Xbutton>\n      </InputArea>\n      <Label validLength={inputTitleValue.length < 100}>\n        Instruction for the task:\n      </Label>\n      <InputArea>\n        <TextArea\n          isInstructionEmpty={!isInstructionEmpty}\n          value={inputInstructionValue}\n          onChange={readInstructionHandler}\n          name=\"\"\n          id=\"\"\n          cols=\"30\"\n          rows=\"10\"\n        ></TextArea>\n        <Xbutton type=\"button\" onClick={clearInstructionInputHandler}>\n          <i className=\"fas fa-times\"></i>\n        </Xbutton>\n      </InputArea>\n      <InputArea>\n        <InputDate\n          isDateEmpty={!isDateEmpty}\n          type=\"date\"\n          onChange={readDateHandler}\n        />\n      </InputArea>\n      {isErrorText ? (\n        <p style={{ color: \"red\" }}>The form has empty fields !</p>\n      ) : (\n        \"\"\n      )}\n      <BotButtons>\n        <Button onClick={props.clickAdd}>Add</Button>\n        <Button onClick={hideForm}>Collapse</Button>\n      </BotButtons>\n    </Wrapper>\n  );\n};\n\nexport default Form;\n\n// czy moge jakos w jednej funkcji czyscic ten przycisk ktory chce\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst FilterWrapper = styled.div`\n  margin-top: 1rem;\n  width: 21rem;\n  padding: 0.5rem;\n  border-radius: 0.5rem;\n  background-color: #00d9ff47;\n  box-shadow: 0 1px 8px rgba(0, 0, 0, 0.15);\n`;\nconst Label = styled.label`\n  margin-right: 0.5rem;\n  font-size: 0.8rem;\n  color: #0000ff99;\n`;\nconst Input = styled.input`\n  border: none;\n  border-radius: 5px;\n  background-color: #ffffffa7;\n`;\n\nconst Filter = (props) => {\n  return (\n    <FilterWrapper>\n      <Label>Filter by name:</Label>\n      <Input\n        onChange={props.onFilterByName}\n        type=\"text\"\n      />\n    </FilterWrapper>\n  );\n};\n\nexport default Filter;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Date = styled.div`\n  padding: 0.38rem;\n  font-size: 0.8rem;\n`;\n\nconst ListElemDate = (props) => {\n  const month = props.date.toLocaleString(\"pl-PL\", { month: \"long\" });\n  const day = props.date.toLocaleString(\"pl-PL\", { day: \"2-digit\" });\n  const year = props.date.getFullYear();\n  return (\n    <Date>\n      <div>{day}</div>\n      <div>{month}</div>\n      <div>{year}</div>\n    </Date>\n  );\n};\n\nexport default ListElemDate;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst NoteWrapper = styled.div`\n  background-color: #00eeff58;\n  border-radius: 5px;\n  margin-bottom: 0.5rem;\n  display: ${(props) => (props.isClicked ? \"block\" : \"none\")};\n`;\n\nconst TextArea = styled.textarea`\n  font-family: \"Times New Roman\", Times, serif;\n  background-color: #ffffffa7;\n  border: none;\n  border-radius: 5px;\n  margin: 0.3rem;\n  min-width: 95%;\n  max-width: 95%;\n  height: 3rem;\n`;\nconst Button = styled.button`\n  margin-top: 0.2rem;\n  border: none;\n  background: none;\n  cursor: pointer;\n  font-size: 0.7rem;\n  color: green;\n`;\n\nconst Note = (props) => {\n  /*\n  const [inputNoteValue, setInputNoteValue] = useState(\"\");\n\n  const inputNoteValueHandler = (event) => {\n    setInputNoteValue(event.target.value);\n  };\n  */\n const inputNoteValueHandler = () => {\n\n }\n  const hideNoteHandler = () => {\n    props.onHideNote();\n  };\n\n  return (\n    <NoteWrapper isClicked={props.isClicked}>\n      <Button onClick={hideNoteHandler}>\n        Less <i className=\"fas fa-angle-double-left\"></i>\n      </Button>\n      <TextArea\n        value={props.instruction}\n        onChange={inputNoteValueHandler}\n        name=\"\"\n        id=\"\"\n        cols=\"30\"\n        rows=\"10\"\n      ></TextArea>\n    </NoteWrapper>\n  );\n};\n\nexport default Note;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport ListElemDate from \"./ListElemDate\";\nimport Note from \"./Note\";\n\nconst LiWrapper = styled.div`\n  width: 80%;\n`;\n\nconst MainWrapper = styled.li`\n  list-style: none;\n\n  padding: 0.5rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-radius: 0.5rem;\n  margin-bottom: 0.5rem;\n  background-color: #00eeff58;\n  box-shadow: 0 1px 8px rgba(0, 0, 0, 0.15);\n`;\nconst Section = styled.div`\n  border: 1px solid #0000ff13;\n  border-radius: 0.5rem;\n  background-color: #0000ff13;\n  width: 30%;\n`;\nconst Personal = styled.h6`\n  margin: 0.2rem;\n  padding: 0.3rem;\n`;\nconst ContentSection = styled(Section)`\n  width: 80%;\n  margin: 0.2rem 0.5rem;\n  padding: 0.45rem;\n  font-size: 0.8rem;\n`;\nconst ButtonMore = styled.button`\n  border: none;\n  background: none;\n  cursor: pointer;\n  font-size: 0.7rem;\n  color: green;\n`;\nconst ButtonClose = styled(ButtonMore)`\n  color: #0000ff92;\n  font-size: 0.8rem;\n  transition: color 0.5s;\n  &:hover {\n    color: red;\n  }\n`;\n\nconst ListElem = (props) => {\n  const [isClicked, setIsClicked] = useState(false);\n\n  const deleteTaskHandler = () => {\n    props.onDeleteTask(props.id);\n  };\n\n  const showNoteHandler = () => {\n    setIsClicked(true);\n  };\n  const hideNoteHandler = () => {\n    setIsClicked(false);\n  };\n\n  return (\n    <LiWrapper>\n      <MainWrapper>\n        <Section>\n          <Personal>{props.name}</Personal>\n          <Personal>{props.surrname}</Personal>\n        </Section>\n        <ContentSection>\n          <p>\n            {props.title}\n            <ButtonMore onClick={showNoteHandler}>\n              More <i className=\"fas fa-angle-double-right\"></i>\n            </ButtonMore>\n          </p>\n        </ContentSection>\n        <Section>\n          <ListElemDate date={props.date} />\n        </Section>\n        <ButtonClose onClick={deleteTaskHandler}>\n          <i className=\"far fa-times-circle\"></i>\n        </ButtonClose>\n      </MainWrapper>\n      <Note\n        instruction={props.instruction}\n        isClicked={isClicked}\n        onHideNote={hideNoteHandler}\n      />\n    </LiWrapper>\n  );\n};\n\nexport default ListElem;\n","import React from \"react\";\n\nimport styled from \"styled-components\";\n\nimport ListElem from \"./ListElem\";\n\nconst UlWrapper = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 70%;\n  padding: 0.1rem;\n\n  @media (max-width: 600px) {\n    width: 100%;\n}\n`; \n\nconst ListOfElements = (props) => {\n  return (\n    <UlWrapper>\n      {props.listElements.map((element) => (\n        <ListElem\n          key={element.id}\n          id={element.id}\n          name={element.name}\n          surrname={element.surrname}\n          title={element.title}\n          instruction={element.instruction}\n          date={element.date}\n          label={element.label}\n          onDeleteTask={props.onDeleteListElem}\n        />\n      ))}\n    </UlWrapper>\n  );\n};\n\nexport default ListOfElements;\n","import React, { useState } from \"react\";\n\nimport styled from \"styled-components\";\n\nimport \"./App.css\";\nimport TopBar from \"./components/TopBar\";\nimport Form from \"./components/Form\";\nimport Filter from \"./components/Filter\";\nimport ListOfElements from \"./components/ListOfElements\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nconst Header = styled.h1`\n  padding: 0.5em;\n  width: 20rem;\n  background-color: white;\n  box-shadow: 0 1px 8px rgba(0, 0, 0, 0.15);\n  border-radius: 10px;\n`;\n\nfunction App() {\n  const exampleListElements = [\n    // to zniknie na pusta tablice\n    {\n      id: \"1\",\n      name: \"Marcin\",\n      surrname: \"Kowalczyk\",\n      title: \"zrobić pranie\",\n      instruction: \"30 stopni, 4 program\",\n      date: new Date(2021, 4, 17),\n      label: 1,\n    },\n    {\n      id: \"2\",\n      name: \"Zuzanna\",\n      surrname: \"Czerniej\",\n      title: \"zakupy\",\n      instruction: \"30 stopni, 4 program\",\n      date: new Date(2021, 4, 17),\n      label: 2,\n    },\n    {\n      id: \"3\",\n      name: \"kamil\",\n      surrname: \"Kowalski\",\n      title: \"dupa cycki\",\n      instruction: \"30 stopni, 4 program\",\n      date: new Date(2021, 4, 17),\n      label: 3,\n    },\n  ];\n  const [formListElements, setFormListElements] = useState(exampleListElements);\n\n  const clickAdd = (formInput) => {\n    const newObject = {\n      ...formInput,\n      id: Math.random().toString(),\n    };\n    setFormListElements((previous) => {\n      return [newObject, ...previous];\n    });\n  };\n\n  const deleteListElem = (elementId) => {\n    setFormListElements((previous) => {\n      const newObject = previous.filter((element) => element.id !== elementId);\n      return newObject;\n    });\n  };\n\n  const deleteAllListElements = () => {\n    setFormListElements(exampleListElements);\n  };\n\n  const [inputFilterValue, setInputFilterValue] = useState(\"\");\n\n  const filterByName = (event) => {\n    setInputFilterValue(event.target.value);\n  };\n  const filteredArray = formListElements.filter((element) =>\n    element.name.toLowerCase().includes(inputFilterValue.toLowerCase())\n  );\n\n  let content = (\n    <ListOfElements\n      onDeleteListElem={deleteListElem}\n      listElements={filteredArray}\n    />\n  );\n\n  if (formListElements.length === 0) {\n    content = <p>No tasks found, please click Add new task</p>;\n  }\n\n  return (\n    <Wrapper className=\"App\">\n      <TopBar onDeleteAllListElements={deleteAllListElements} />\n      <Header>To Do Manager</Header>\n      <Form onClickAdd={clickAdd} />\n      <Filter onFilterByName={filterByName} />\n      {content}\n    </Wrapper>\n  );\n}\n\nexport default App;\n\n// edytowalne notatki\n// filtr po imionach lub nazwiskach\n// filtr po miesiącach/dniach\n\n// pooprawic style\n// dodac animacje\n// instrulcja\n// czytelnosc kodu (skrócić kod)\n\n// ogarnac ten warunek z id\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
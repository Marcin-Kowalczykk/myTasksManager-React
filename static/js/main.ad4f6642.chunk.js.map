{"version":3,"sources":["components/TopBar.js","components/Form.js","components/Filter.js","components/ListElemDate.js","components/Note.js","components/ListElem.js","components/ListOfElements.js","App.js","reportWebVitals.js","index.js"],"names":["Wrapper","styled","div","Button","button","Info","TopBar","props","onClick","onDeleteAllListElements","className","wrapperAnimationShow","keyframes","form","isClicked","InputArea","InputText","input","validLength","isNameEmpty","isSurnameEmpty","isTitleEmpty","TextArea","textarea","isInstructionEmpty","InputDate","isDateEmpty","Xbutton","Label","label","MainButton","BotButtons","Form","useState","inputNameValue","setInputNameValue","inputSurnameValue","setInputSurnameValue","inputTitleValue","setInputTitleValue","inputDateValue","setInputDateValue","inputInstructionValue","setInputInstructionValue","setIsClicked","isErrorText","setIsErrorText","setIsNameEmpty","setIsSurnameEmpty","setIsTitleEmpty","setInstructionEmpty","setIsDateEmpty","checkInput","setter","trim","inputSettersArray","clearForm","inputsArray","forEach","element","settersArray","clearErrors","validSetter","type","onSubmit","event","preventDefault","length","formListElement","name","surname","title","instruction","date","Date","onClickAdd","value","onChange","target","id","cols","rows","style","color","clickAdd","showAnimation","FilterWrapper","showButtonClick","ButtonHide","ButtonShow","InputWrapper","Input","Filter","isShowButton","setIsShowButton","onFilterByPersonal","onFilterByTitle","onFilterByDate","ListElemDate","month","toLocaleString","day","year","getFullYear","NoteWrapper","animation","Note","inputNoteValue","setInputNoteValue","animationShow","onHideNote","animationHide","LiWrapper","cosi","MainWrapper","li","Section","Personal","h6","ContentSection","ButtonMore","ButtonClose","ListElem","setCosi","setTimeout","onDeleteTask","UlWrapper","ul","ListOfElements","listElements","map","onDeleteListElem","Header","h1","App","newArray","exampleListElements","formListElements","setFormListElements","inputFilterByPersonalValue","setInputFilterByPersonalValue","inputFilterByTitleValue","setInputFilterByTitleValue","inputFilterByDateValue","setInputFilterByDateValue","filteredArrayByPersonal","filter","toLowerCase","includes","filteredArrayByTitle","filteredArrayByDate","toString","content","elementId","previous","formInput","newObject","Math","random","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ad4f6642.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 1rem;\n  align-self: flex-end;\n\n  @media (max-width: 600px) {\n    padding: 0.3rem;\n  }\n`;\nconst Button = styled.button`\n  border: none;\n  border-radius: 8px;\n  background-color: white;\n  color: black;\n  padding: 0.6rem;\n  margin-right: 1rem;\n  cursor: pointer;\n  box-shadow: 0 1px 8px rgba(0, 0, 0, 0.15);\n  transition: background-color .5s;\n\n  &:hover {\n    background-color: #8b8b8b3e;\n  }\n\n  @media (max-width: 600px) {\n    margin-right: 0.3rem;\n  }\n`;\nconst Info = styled.button`\ncolor: #0000ffac;\n  border: none;\n  background: none;\n  font-size: 1.5rem;\n  cursor: pointer;\n`;\n\nconst TopBar = (props) => {\n  const deleteAllHandler = () => {\n    props.onDeleteAllListElements();\n  };\n  return (\n    <Wrapper>\n      <Button onClick={deleteAllHandler}>Clear All</Button>\n      <Info>\n        <i className=\"fas fa-info-circle\"></i>\n      </Info>\n    </Wrapper>\n  );\n};\n\nexport default TopBar;\n","import React, { useState } from \"react\";\n\nimport styled from \"styled-components\";\nimport { keyframes } from \"styled-components\";\n\nconst wrapperAnimationShow = keyframes`\n  0% { opacity: 0.1; }\n  100% { opacity: 1; }\n  `;\nconst Wrapper = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 20rem;\n  padding: 1rem;\n  border-radius: 0.5rem;\n  background-color: #00d9ff47;\n  box-shadow: 0 1px 8px rgba(0, 0, 0, 0.15);\n  animation-name: ${(props) =>\n    props.isClicked ? wrapperAnimationShow : false};\n  animation-duration: 1.5s;\n`;\nconst InputArea = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`;\nconst InputText = styled.input`\n  width: 80%;\n  height: 1.5rem;\n  background-color: ${(props) =>\n    props.validLength ? \"#ffffffa7\" : \"#a0000034\"};\n  border: ${(props) =>\n    (props.validLength && props.isNameEmpty) ||\n    props.isSurnameEmpty ||\n    props.isTitleEmpty\n      ? \"none\"\n      : \"1px solid rgb(255, 0, 0, .7)\"};\n  border-radius: 0.3rem;\n  margin: 0 0 0.6rem 1.5rem;\n`;\nconst TextArea = styled.textarea`\n  font-family: \"Times New Roman\", Times, serif;\n  background-color: #ffffffa7;\n  border: ${(props) =>\n    props.isInstructionEmpty ? \"none\" : \"1px solid rgb(255, 0, 0, .7)\"};\n  border-radius: 5px;\n  margin: 0 0 3% 7%;\n  min-width: 80%;\n  max-width: 80%;\n  height: 4rem;\n`;\nconst InputDate = styled(InputText)`\n  ::-webkit-datetime-edit-text {\n    color: #0000ff94;\n    padding: 0 0.1em;\n  }\n  ::-webkit-calendar-picker-indicator {\n    margin: 3px;\n    font-size: 0.6rem;\n    cursor: pointer;\n  }\n  text-align: center;\n  color: #0000ff94;\n  font-size: 0.7rem;\n  margin-left: 37%;\n  width: 45%;\n  background-color: #a0420311;\n  border: 1px solid\n    ${(props) => (props.isDateEmpty ? \"#e75c0030\" : \"rgb(255, 0, 0, .9)\")};\n`;\nconst Xbutton = styled.button`\n  border: none;\n  background: none;\n  color: #0000ff92;\n  cursor: pointer;\n  transition: color 0.5s, font-size 0.5s;\n  &:hover {\n    color: red;\n    font-size: 1.5rem;\n\n    @media (max-width: 600px) {\n      font-size: 1rem;\n    }\n  }\n`;\nconst Label = styled.label`\n  font-size: 0.8rem;\n  color: ${(props) => (props.validLength ? \"#0000ff94\" : \"rgb(255, 0, 0, .9)\")};\n  margin-bottom: 0.3rem;\n`;\nconst Button = styled.button`\n  background-color: #0000ff76;\n  color: white;\n  width: 5rem;\n  padding: 0.4rem;\n  border: none;\n  border-radius: 0.5rem;\n  cursor: pointer;\n  transition: background-color 0.5s;\n  margin-top: 0.3rem;\n  margin-left: 5px;\n\n  &:hover {\n    background-color: #0000ffa4;\n  }\n`;\nconst MainButton = styled(Button)`\n  width: 80%;\n`;\n\nconst BotButtons = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  align-self: flex-end;\n`;\n\nconst Form = (props) => {\n  const [inputNameValue, setInputNameValue] = useState(\"\");\n  const [inputSurnameValue, setInputSurnameValue] = useState(\"\");\n  const [inputTitleValue, setInputTitleValue] = useState(\"\");\n  const [inputDateValue, setInputDateValue] = useState(\"\");\n  const [inputInstructionValue, setInputInstructionValue] = useState(\"\");\n\n  const [isClicked, setIsClicked] = useState(false);\n  const [isErrorText, setIsErrorText] = useState(false);\n\n  const [isNameEmpty, setIsNameEmpty] = useState(false);\n  const [isSurnameEmpty, setIsSurnameEmpty] = useState(false);\n  const [isTitleEmpty, setIsTitleEmpty] = useState(false);\n  const [isInstructionEmpty, setInstructionEmpty] = useState(false);\n  const [isDateEmpty, setIsDateEmpty] = useState(false);\n\n  const readNameHandler = (event) => {\n    setInputNameValue(event.target.value);\n  };\n  const readSurnameHandler = (event) => {\n    setInputSurnameValue(event.target.value);\n  };\n  const readTitleHandler = (event) => {\n    setInputTitleValue(event.target.value);\n  };\n  const readDateHandler = (event) => {\n    setInputDateValue(event.target.value);\n  };\n  const readInstructionHandler = (event) => {\n    setInputInstructionValue(event.target.value);\n  };\n  const clearNameInputHandler = () => {\n    setInputNameValue(\"\");\n  };\n  const clearSurnameInputHandler = () => {\n    setInputSurnameValue(\"\");\n  };\n  const clearTitleInputHandler = () => {\n    setInputTitleValue(\"\");\n  };\n  const clearInstructionInputHandler = () => {\n    setInputInstructionValue(\"\");\n  };\n\n  const addItemHandler = (event) => {\n    event.preventDefault();\n    if (\n      inputNameValue.length < 11 &&\n      inputSurnameValue.length < 11 &&\n      inputTitleValue.length < 14 &&\n      inputNameValue.trim() !== \"\" &&\n      inputSurnameValue.trim() !== \"\" &&\n      inputTitleValue.trim() !== \"\" &&\n      inputDateValue.trim() !== \"\"\n    ) {\n      const formListElement = {\n        name: inputNameValue,\n        surname: inputSurnameValue,\n        title: inputTitleValue,\n        instruction: inputInstructionValue,\n        date: new Date(inputDateValue),\n      };\n      setIsErrorText(false);\n      setIsClicked(false);\n      props.onClickAdd(formListElement);\n      clearForm(inputSettersArray);\n    } else {\n      setIsErrorText(true);\n    }\n    checkInput(inputNameValue, setIsNameEmpty);\n    checkInput(inputSurnameValue, setIsSurnameEmpty);\n    checkInput(inputTitleValue, setIsTitleEmpty);\n    checkInput(inputDateValue, setIsDateEmpty);\n    checkInput(inputInstructionValue, setInstructionEmpty);\n  };\n  const checkInput = (input, setter) => {\n    input.trim() === \"\" ? setter(true) : setter(false);\n  };\n  const showForm = () => {\n    setIsClicked(true);\n  };\n  const hideForm = () => {\n    setIsClicked(false);\n    clearErrors(settersArray);\n    clearForm(inputSettersArray);\n  };\n  const inputSettersArray = [\n    setInputNameValue,\n    setInputSurnameValue,\n    setInputTitleValue,\n    setInputDateValue,\n    setInputInstructionValue,\n  ];\n  const clearForm = (inputsArray) => {\n    inputsArray.forEach((element) => {\n      element(\"\");\n    });\n  };\n  const settersArray = [\n    setIsErrorText,\n    setIsNameEmpty,\n    setIsSurnameEmpty,\n    setIsTitleEmpty,\n    setIsDateEmpty,\n    setInstructionEmpty,\n  ];\n  const clearErrors = (validSetter) => {\n    validSetter.forEach((element) => {\n      element(false);\n    });\n  };\n\n  if (isClicked === false) {\n    return (\n      <Wrapper isClicked={isClicked}>\n        <MainButton type=\"button\" onClick={showForm}>\n          Add new task\n        </MainButton>\n      </Wrapper>\n    );\n  }\n\n  return (\n    <Wrapper isClicked={isClicked} onSubmit={addItemHandler}>\n      <Label validLength={inputNameValue.length < 11}>Name: </Label>\n      <InputArea>\n        <InputText\n          isNameEmpty={!isNameEmpty}\n          validLength={inputNameValue.length < 11}\n          type=\"text\"\n          value={inputNameValue}\n          onChange={readNameHandler}\n        />\n        <Xbutton type=\"button\" onClick={clearNameInputHandler}>\n          <i className=\"fas fa-times\"></i>\n        </Xbutton>\n      </InputArea>\n      <Label validLength={inputSurnameValue.length < 11}>Surname: </Label>\n      <InputArea>\n        <InputText\n          isSurnameEmpty={!isSurnameEmpty}\n          validLength={inputSurnameValue.length < 11}\n          type=\"text\"\n          value={inputSurnameValue}\n          onChange={readSurnameHandler}\n        />\n        <Xbutton type=\"button\" onClick={clearSurnameInputHandler}>\n          <i className=\"fas fa-times\"></i>\n        </Xbutton>\n      </InputArea>\n      <Label validLength={inputTitleValue.length < 14}>Task title: </Label>\n      <InputArea>\n        <InputText\n          isTitleEmpty={!isTitleEmpty}\n          validLength={inputTitleValue.length < 14}\n          type=\"text\"\n          value={inputTitleValue}\n          onChange={readTitleHandler}\n        />\n        <Xbutton type=\"button\" onClick={clearTitleInputHandler}>\n          <i className=\"fas fa-times\"></i>\n        </Xbutton>\n      </InputArea>\n      <Label validLength={inputTitleValue.length < 100}>\n        Instruction for the task:\n      </Label>\n      <InputArea>\n        <TextArea\n          isInstructionEmpty={!isInstructionEmpty}\n          value={inputInstructionValue}\n          onChange={readInstructionHandler}\n          name=\"\"\n          id=\"\"\n          cols=\"30\"\n          rows=\"10\"\n        ></TextArea>\n        <Xbutton type=\"button\" onClick={clearInstructionInputHandler}>\n          <i className=\"fas fa-times\"></i>\n        </Xbutton>\n      </InputArea>\n      <InputArea>\n        <InputDate\n          isDateEmpty={!isDateEmpty}\n          type=\"date\"\n          onChange={readDateHandler}\n        />\n      </InputArea>\n      {isErrorText ? (\n        <p style={{ color: \"red\" }}>The form has empty fields !</p>\n      ) : (\n        \"\"\n      )}\n      <BotButtons>\n        <Button onClick={props.clickAdd}>Add</Button>\n        <Button onClick={hideForm}>Collapse</Button>\n      </BotButtons>\n    </Wrapper>\n  );\n};\n\nexport default Form;\n\n// czy moge jakos w jednej funkcji czyscic ten przycisk ktory chce\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { keyframes } from \"styled-components\";\n\nconst showAnimation = keyframes`\n  0% {opacity: 0;}\n  100% {opacity: 1;}\n`;\nconst FilterWrapper = styled.div`\n  margin-top: 1rem;\n  width: ${(props) => (props.showButtonClick ? \"17rem\" : \"5rem\")};\n  border-radius: 0.5rem;\n  background-color: #00d9ff47;\n  box-shadow: 0 1px 8px rgba(0, 0, 0, 0.15);\n  animation: ${(props) => (props.showButtonClick ? showAnimation : false)};\n  animation-duration: 1s;\n`;\nconst ButtonHide = styled.button`\n  display: block;\n  margin: 1% 1% 1% 92%;\n  border: none;\n  background: none;\n  cursor: pointer;\n  color: #2949fc8b;\n  font-size: 0.6rem;\n`;\nconst ButtonShow = styled(ButtonHide)`\n  margin: 1% 15% 1% auto;\n  font-size: 0.8rem;\n`;\nconst InputWrapper = styled.div`\n  margin: 0 0.5rem 0.5rem 0.5rem;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Label = styled.label`\n  margin-right: 0.5rem;\n  font-size: 0.8rem;\n  color: #0000ff99;\n`;\nconst Input = styled.input`\n  align-self: center;\n  width: auto;\n  border: none;\n  border-radius: 5px;\n  background-color: #ffffffa7;\n`;\n\nconst Filter = (props) => {\n  const [isShowButton, setIsShowButton] = useState(false);\n\n  const hideFilterHandler = () => {\n    setIsShowButton(false);\n  };\n  const showFilterHandler = () => {\n    setIsShowButton(true);\n  };\n\n  if (!isShowButton) {\n    return (\n      <FilterWrapper showButtonClick={isShowButton}>\n        <ButtonShow onClick={showFilterHandler}>\n          Filter <i className=\"fas fa-compress\"></i>\n        </ButtonShow>\n      </FilterWrapper>\n    );\n  }\n\n  return (\n    <FilterWrapper showButtonClick={isShowButton}>\n      <ButtonHide onClick={hideFilterHandler}>\n        <i className=\"fas fa-compress-arrows-alt\"></i>\n      </ButtonHide>\n      <InputWrapper>\n        <Label>Filter by personal:</Label>\n        <Input onChange={props.onFilterByPersonal} type=\"text\" />\n      </InputWrapper>\n      <InputWrapper>\n        <Label>Filter by title:</Label>\n        <Input onChange={props.onFilterByTitle} type=\"text\" />\n      </InputWrapper>\n      <InputWrapper>\n        <Label>Filter by date:</Label>\n        <Input onChange={props.onFilterByDate} type=\"text\" />\n      </InputWrapper>\n    </FilterWrapper>\n  );\n};\n\nexport default Filter;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Date = styled.div`\n  padding: 0.38rem;\n  font-size: 0.8rem;\n`;\n\nconst ListElemDate = (props) => {\n  const month = props.date.toLocaleString(\"pl-PL\", { month: \"long\" });\n  const day = props.date.toLocaleString(\"pl-PL\", { day: \"2-digit\" });\n  const year = props.date.getFullYear();\n  return (\n    <Date>\n      <div>{day}</div>\n      <div>{month}</div>\n      <div>{year}</div>\n    </Date>\n  );\n};\n\nexport default ListElemDate;\n","import React, { useState } from \"react\";\n\nimport styled from \"styled-components\";\n\nconst NoteWrapper = styled.div`\n  background-color: #00eeff58;\n  border-radius: 5px;\n  margin-bottom: 0.5rem;\n  display: ${(props) => (props.isClicked ? \"block\" : \"none\")};\n  animation: ${(props) => (props.isClicked ? props.animation : false)};\n  animation-duration: 1s;\n`;\n\nconst TextArea = styled.textarea`\n  font-family: \"Times New Roman\", Times, serif;\n  background-color: #ffffffa7;\n  border: none;\n  border-radius: 5px;\n  margin: 0.3rem;\n  min-width: 95%;\n  max-width: 95%;\n  height: 3rem;\n`;\nconst Button = styled.button`\n  margin-top: 0.2rem;\n  border: none;\n  background: none;\n  cursor: pointer;\n  font-size: 0.7rem;\n  color: green;\n`;\n\nconst Note = (props) => {\n  const [inputNoteValue, setInputNoteValue] = useState(props.instruction);\n\n  const inputNoteValueHandler = (event) => {\n    setInputNoteValue(event.target.value);\n  };\n  const hideNoteHandler = () => {\n    props.onHideNote();\n  };\n\n  return (\n    <NoteWrapper animation={props.animationShow} isClicked={props.isClicked}>\n      <Button onClick={hideNoteHandler}>\n        Less <i className=\"fas fa-angle-double-left\"></i>\n      </Button>\n      <TextArea\n        value={inputNoteValue}\n        onChange={inputNoteValueHandler}\n        name=\"\"\n        id=\"\"\n        cols=\"30\"\n        rows=\"10\"\n      ></TextArea>\n    </NoteWrapper>\n  );\n};\n\nexport default Note;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport ListElemDate from \"./ListElemDate\";\nimport Note from \"./Note\";\nimport { keyframes } from \"styled-components\";\n\nconst animationShow = keyframes`\n  0% { opacity: 0; }\n  100% { opacity: 1; }\n  `;\nconst animationHide = keyframes`\n  0% { opacity: 1; }\n  100% { opacity: 0; }\n`;\nconst LiWrapper = styled.div`\n  width: 80%;\n  animation: ${(props) => (props.cosi ? animationHide : animationShow)};\n  animation-duration: 1s;\n  animation-delay: infinity;\n`;\n\nconst MainWrapper = styled.li`\n  list-style: none;\n  padding: 0.5rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-radius: 0.5rem;\n  margin-bottom: 0.5rem;\n  background-color: #00eeff58;\n  box-shadow: 0 1px 8px rgba(0, 0, 0, 0.15);\n`;\nconst Section = styled.div`\n  border: 1px solid #0000ff13;\n  border-radius: 0.5rem;\n  background-color: #0000ff13;\n  width: 30%;\n`;\nconst Personal = styled.h6`\n  margin: 0.2rem;\n  padding: 0.3rem;\n`;\nconst ContentSection = styled(Section)`\n  width: 80%;\n  margin: 0.2rem 0.5rem;\n  padding: 0.45rem;\n  font-size: 0.8rem;\n`;\nconst ButtonMore = styled.button`\n  border: none;\n  background: none;\n  cursor: pointer;\n  font-size: 0.7rem;\n  color: green;\n`;\nconst ButtonClose = styled(ButtonMore)`\n  color: #0000ff92;\n  font-size: 0.8rem;\n  transition: color 0.5s;\n  &:hover {\n    color: red;\n  }\n`;\n\nconst ListElem = (props) => {\n  const [isClicked, setIsClicked] = useState(false);\n  const [cosi, setCosi] = useState(false);\n\n  const deleteTaskHandler = () => {\n    setCosi(true);\n    setTimeout(() => props.onDeleteTask(props.id), 1000);\n  };\n\n  const showNoteHandler = () => {\n    setIsClicked(true);\n  };\n  const hideNoteHandler = () => {\n    setIsClicked(false);\n  };\n\n  return (\n    <LiWrapper cosi={cosi}>\n      <MainWrapper>\n        <Section>\n          <Personal>{props.name}</Personal>\n          <Personal>{props.surname}</Personal>\n        </Section>\n        <ContentSection>\n          <p>\n            {props.title}\n            <ButtonMore onClick={showNoteHandler}>\n              More <i className=\"fas fa-angle-double-right\"></i>\n            </ButtonMore>\n          </p>\n        </ContentSection>\n        <Section>\n          <ListElemDate date={props.date} />\n        </Section>\n        <ButtonClose onClick={deleteTaskHandler}>\n          <i className=\"far fa-times-circle\"></i>\n        </ButtonClose>\n      </MainWrapper>\n      <Note\n        instruction={props.instruction}\n        isClicked={isClicked}\n        onHideNote={hideNoteHandler}\n        animationShow={animationShow}\n      />\n    </LiWrapper>\n  );\n};\n\nexport default ListElem;\n","import React from \"react\";\n\nimport styled from \"styled-components\";\n\nimport ListElem from \"./ListElem\";\n\nconst UlWrapper = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 70%;\n  padding: 0.1rem;\n\n  @media (max-width: 600px) {\n    width: 28rem;\n}\n`; \n\nconst ListOfElements = (props) => {\n  return (\n    <UlWrapper>\n      {props.listElements.map((element) => (\n        <ListElem\n          key={element.id}\n          id={element.id}\n          name={element.name}\n          surname={element.surname}\n          title={element.title}\n          instruction={element.instruction}\n          date={element.date}\n          label={element.label}\n          onDeleteTask={props.onDeleteListElem}\n        />\n      ))}\n    </UlWrapper>\n  );\n};\n\nexport default ListOfElements;\n","import React, { useState } from \"react\";\n\nimport styled from \"styled-components\";\n\nimport \"./App.css\";\nimport TopBar from \"./components/TopBar\";\nimport Form from \"./components/Form\";\nimport Filter from \"./components/Filter\";\nimport ListOfElements from \"./components/ListOfElements\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nconst Header = styled.h1`\n  padding: 0.5em;\n  width: 20rem;\n  background-color: white;\n  box-shadow: 0 1px 8px rgba(0, 0, 0, 0.15);\n  border-radius: 10px;\n`;\n\nfunction App() {\n  const exampleListElements = [\n    // to zniknie na pusta tablice\n    {\n      id: \"1\",\n      name: \"Marcin\",\n      surname: \"Kowalczyk\",\n      title: \"zrobić pranie\",\n      instruction: \"30 stopni, 4 program\",\n      date: new Date(2021, 4, 17),\n      label: 1,\n    },\n    {\n      id: \"2\",\n      name: \"Zuzanna\",\n      surname: \"Czerniej\",\n      title: \"zakupy\",\n      instruction: \"zara\",\n      date: new Date(2019, 4, 17),\n      label: 2,\n    },\n    {\n      id: \"3\",\n      name: \"kamil\",\n      surname: \"Kowalski\",\n      title: \"dupa cycki\",\n      instruction: \"no dupa\",\n      date: new Date(2020, 4, 17),\n      label: 3,\n    },\n  ];\n  const [formListElements, setFormListElements] = useState(exampleListElements);\n\n  const clickAdd = (formInput) => {\n    const newObject = {\n      ...formInput,\n      id: Math.random().toString(),\n    };\n    setFormListElements((previous) => {\n      return [newObject, ...previous];\n    });\n  };\n\n  const deleteListElem = (elementId) => {\n    setFormListElements((previous) => {\n      const newObject = previous.filter((element) => element.id !== elementId);\n      return newObject;\n    });\n  };\n\n  const deleteAllListElements = () => {\n    setFormListElements(exampleListElements);\n  };\n\n  const [inputFilterByPersonalValue, setInputFilterByPersonalValue] =\n    useState(\"\");\n  const [inputFilterByTitleValue, setInputFilterByTitleValue] = useState(\"\");\n  const [inputFilterByDateValue, setInputFilterByDateValue] = useState(\"\");\n\n  const filterByPersonal = (event) => {\n    setInputFilterByPersonalValue(event.target.value);\n  };\n  const filterByTitle = (event) => {\n    setInputFilterByTitleValue(event.target.value);\n  };\n  const filterByDate = (event) => {\n    setInputFilterByDateValue(event.target.value);\n  };\n  const filteredArrayByPersonal = formListElements.filter(\n    (element) =>\n      element.name\n        .toLowerCase()\n        .includes(inputFilterByPersonalValue.toLowerCase()) ||\n      element.surname\n        .toLowerCase()\n        .includes(inputFilterByPersonalValue.toLowerCase())\n  );\n  const filteredArrayByTitle = formListElements.filter((element) =>\n    element.title.toLowerCase().includes(inputFilterByTitleValue.toLowerCase())\n  );\n  const filteredArrayByDate = formListElements.filter((element) =>\n    element.date\n      .getFullYear()\n      .toString()\n      .toLowerCase()\n      .includes(inputFilterByDateValue.toLowerCase())\n  );\n\n  let newArray;\n\n  if (inputFilterByPersonalValue.length > 0) {\n    newArray = filteredArrayByPersonal;\n  } else if (inputFilterByTitleValue.length > 0) {\n    newArray = filteredArrayByTitle;\n  } else {\n    newArray = filteredArrayByDate;\n  }\n\n  let content = (\n    <ListOfElements onDeleteListElem={deleteListElem} listElements={newArray} />\n  );\n\n  if (formListElements.length === 0) {\n    content = <p>No tasks found, please click Add new task</p>;\n  }\n\n  return (\n    <Wrapper className=\"App\">\n      <TopBar onDeleteAllListElements={deleteAllListElements} />\n      <Header>To Do Manager</Header>\n      <Form onClickAdd={clickAdd} />\n      <Filter\n        onFilterByPersonal={filterByPersonal}\n        onFilterByTitle={filterByTitle}\n        onFilterByDate={filterByDate}\n      />\n      {content}\n    </Wrapper>\n  );\n}\n\nexport default App;\n\n// instrukcja\n\n// pooprawic style\n// czytelnosc kodu (skrócić kod)\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}